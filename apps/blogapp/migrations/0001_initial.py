# Generated by Django 3.2.7 on 2021-09-27 09:14

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_manager', models.BooleanField(default=False, verbose_name='Статус менеджера')),
                ('img', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Фото профиля')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('parent', models.CharField(choices=[('H', 'Header'), ('F', 'Footer')], max_length=20, verbose_name='Родитель')),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('url', models.CharField(max_length=200, verbose_name='URL')),
                ('target', models.CharField(choices=[('B', '_blank'), ('S', '_self')], default='_self', max_length=20, verbose_name='Target')),
                ('pos', models.CharField(choices=[('H', 'Header'), ('F', 'Footer')], max_length=20, verbose_name='Позиция меню')),
                ('show', models.BooleanField(verbose_name='Отображать')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('parent', models.CharField(choices=[('H', 'Header'), ('F', 'Footer')], max_length=20, verbose_name='Родитель')),
            ],
        ),
        migrations.CreateModel(
            name='TextPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(unique=True)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('P', 'Published')], max_length=255, verbose_name='Статус обращения')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_edit', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Превью новости')),
                ('imgalt', models.ImageField(blank=True, null=True, upload_to='', verbose_name='imgalt')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('descr', models.CharField(max_length=255, verbose_name='Краткое описание')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Контент')),
                ('rec', models.CharField(choices=[('H', 'Header'), ('F', 'Footer')], max_length=255, verbose_name='Рекомендуемые статьи')),
                ('rating', models.CharField(max_length=255, verbose_name='Средний рейтинг')),
                ('comments_count', models.CharField(max_length=255, verbose_name='Количество отзывов')),
                ('likes_count', models.CharField(max_length=255, verbose_name='Количество лайков')),
                ('date_created', models.DateField(auto_now_add=True)),
                ('date_edit', models.DateField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Автор', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='blogapp.category')),
            ],
        ),
    ]
